In this protocol, each party x has a long-term private key lkx and a corresponding public key pkx = 'g'^lkx, \
where 'g' is a generator of the Diffie-Hellman group. Because 'g' can be public, we model it as a public \
constant. Two different hash functions h1 and h2 are used.

To start a session, the initiator I first creates a fresh nonce eskI, also known as I's ephemeral (private) key. \
He then concatenates eskI with I's long-term private key lkI, hashes the result using the hash function h1, and \
sends 'g'^h1(eskI ,lkI) to the responder. The responder R stores the received value in a variable X, computes a \
similar value based on his own nonce eskR and long-term private key lkR, and sends the result to the initiator, \
who stores the received value in the variable Y. Finally, both parties compute a session key (kI and kR, respec-\
tively) whose computation includes their own long-term private keys, such that only the intended partner can \
compute the same key.