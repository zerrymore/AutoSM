Knows(P, var)
Send(P, S, 'TCPSYN')
Recv(P, S, 'TCPACK')
Gen(P, ske)
Op(P, assign(pke, kempk(ske)))
Gen(P, rc)
Op(P, assign(ES, hkdfext('empty', 'empty')))
Op(P, assign(dES, hkdfexp(ES, 'derived', 'null')))
Send(P, S, concat('CLIENTHello', pke, rc))
Recv(P, S, concat('SERVERHello', cte, rs))
Op(P, Test())
Op(P, assign(CHSH, htrans(concat(pke, rc, cte, rs))))
Op(P, assign(sse, kemdec(cte, ske)))
Op(P, assign(HS, hkdfext(dES, sse)))
Op(P, assign(CHTS, hkdfexp(HS, 'chsts', CHSH)))
Op(P, assign(SHTS, hkdfexp(HS, 'shsts', CHSH)))
Op(P, assign(dHS, hkdfexp(HS, 'derived', 'null')))
Recv(P, S, servercert)
Op(P, assign(decservercert, sdec(servercert, SHTS)))
Op(P, assign(concat('ServerCert', certpk), decservercert))
Op(P, assign(pks, getcert(certpk)))
Gen(P, sss)
Op(P, assign(cts, kemenc(sss, pks)))
Send(P, S, senc(concat('ClientKem', cts), CHTS))
Op(P, assign(AHS, hkdfext(dES, sss)))
Op(P, assign(CHCKC, htrans(concat(pke, rc, cte, rs, pks, cts))))
Op(P, assign(CAHTS, hkdfexp(AHS, 'cahstr', CHCKC)))
Op(P, assign(SAHTS, hkdfexp(AHS, 'sahstr', CHCKC)))
Op(P, assign(dAHS, hkdfexp(AHS, 'derived', CHCKC)))
Op(P, assign(MS, hkdfext(dAHS, 'empty')))
Op(P, assign(fkc, hkdfexp(MS, 'cfinished', 'null')))
Op(P, assign(fks, hkdfexp(MS, 'sfinished', 'null')))
Op(P, assign(CF, hmac(fkc, CHCKC)))
Send(P, S, senc(concat('ClientFinished', CF), CAHTS))
Op(P, assign(CHCF, htrans(concat(pke, rc, cte, rs, pks, cts, CF))))
Op(P, assign(CATS, hkdfexp(AHS, 'captr', CHCF)))
Op(P, assign(SATS, hkdfexp(AHS, 'saptr', CHCF)))
Recv(P, S, serverfin)
Op(P, assign(decserverfin, sdec(serverfin, SAHTS)))
Op(P, assign(concat('ServerFinished', SF), decserverfin))
Cond(P, equal(SF, hmac(fks, CHCKC)))
Op(P, ClientKey(CATS))
Knows(S, ~skS)
Op(S, assign(pkS, kempk(skS)))
Recv(S, P, 'TCPSYN')
Send(S, P, 'TCPACK')
Recv(S, P, concat('CLIENTHello', pke, rc))
Op(S, assign(ES, hkdfext('empty', 'empty')))
Op(S, assign(dES, hkdfexp(ES, 'derived', 'null')))
Gen(S, sse)
Gen(S, rs)
Op(S, assign(cte, kemenc(sse, pke)))
Send(S, P, concat('SERVERHello', cte, rs))
Op(S, assign(CHSH, htrans(concat(pke, rc, cte, rs))))
Op(S, assign(HS, hkdfext(dES, sse)))
Op(S, assign(CHTS, hkdfexp(HS, 'chsts', CHSH)))
Op(S, assign(SHTS, hkdfexp(HS, 'shsts', CHSH)))
Op(S, assign(dHS, hkdfexp(HS, 'derived', 'null')))
Send(S, P, senc(concat('ServerCert', cert(pkS)), SHTS))
Recv(S, P, clientkem)
Op(S, assign(decclientkem, sdec(clientkem, CHTS)))
Op(S, assign(concat('ClientKem', cts), decclientkem))
Op(S, assign(sss, kemdec(cts, skS)))
Op(S, assign(AHS, hkdfext(dES, sss)))
Op(S, assign(CHCKC, htrans(concat(pke, rc, cte, rs, pkS, cts))))
Op(S, assign(CAHTS, hkdfexp(AHS, 'cahstr', CHCKC)))
Op(S, assign(SAHTS, hkdfexp(AHS, 'sahstr', CHCKC)))
Op(S, ServerKey(SAHTS))
Op(S, assign(dAHS, hkdfexp(AHS, 'derived', CHCKC)))
Op(S, assign(MS, hkdfext(dAHS, 'empty')))
Op(S, assign(fkc, hkdfexp(MS, 'cfinished', 'null')))
Op(S, assign(fks, hkdfexp(MS, 'sfinished', 'null')))
Recv(S, P, clientfin)
Op(S, assign(decclientfin, sdec(clientfin, CAHTS)))
Op(S, assign(concat('ClientFinished', CF), decclientfin))
Cond(S, equal(CF, hmac(fkc, CHCKC)))
Op(S, assign(SF, hmac(fks, CHCKC)))
Op(S, assign(CHCF, htrans(concat(pke, rc, cte, rs, pkS, cts, CF))))
Op(S, assign(CATS, hkdfexp(AHS, 'captr', CHCF)))
Op(S, assign(SATS, hkdfexp(AHS, 'saptr', CHCF)))
Send(S, P, senc(concat('ServerFinished', SF), SAHTS))
PAR(GLOBAL, P(), Q())







/*=== IKEv2 ===*/
Gen(Client, pke)             
Op(Client, assign(ClientHello, concat(pke, methods)))    // unb
Send(Client, Server, ClientHello)                        // ✅
Gen(Server, cte)                                    
Gen(Server, rc)                                     // ✅
Gen(Server, rs)                              // ✅
Op(Server, assign(ServerHello, concat(cte, selectedAlgorithms, rc, rs)))  // unb
Send(Server, Client, ServerHello)           // ✅ 
Op(Client, assign(CHTS, hkdf(sse, transcript, "client hs traffic")))  // unb
Op(Server, assign(SHTS, hkdf(sse, transcript, "server hs traffic")))
Op(Client, assign(dHS, hkdf(sse, transcript, "derived hs"))) 
Gen(Client, pksEnc)
Op(Client, assign(pksEnc, kemEncapsulate(pks)))  // unb
Send(Client, Server, ClientKemCiphertext(pksEnc))      
Op(Client, assign(ssS, pksEnc)) 
Op(Client, assign(AHS, hkdf(dHS, ssS, "authenticated hs")))
Op(Client, assign(CAHTS, hkdf(AHS, "client authenticated hs traffic")))
Op(Server, assign(SAHTS, hkdf(AHS, "server authenticated hs traffic")))
Op(Client, assign(dAHS, hkdf(AHS, "updated hs")))
Op(Client, assign(MS, hkdf(dAHS, "master secret")))
Op(Client, assign(fkc, hkdf(MS, "client finished key")))
Op(Server, assign(fks, hkdf(MS, "server finished key")))
Op(Client, assign(CATS, hkdf(MS, "client app traffic secret")))
Op(Server, assign(SATS, hkdf(MS, "server app traffic secret")))
Op(Client, assign(ClientFinished, hmac(transcript, fkc)))
Send(Client, Server, ClientFinished)
Op(Server, assign(ServerFinished, hmac(transcript, fks)))
Send(Server, Client, ServerFinished)

//  Total: 28
//     EC: 4/28=14.29
//    BER: 24/28=86.71
//     #1: 3/28=10.71
//     #2: 21/28=7500
/*=== SSH ===*/
