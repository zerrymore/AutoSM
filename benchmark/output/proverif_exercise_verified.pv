free att:channel.
free sACK:bitstring.
free sDONE:bitstring.
fun fst(bitstring):bitstring.
fun kdf(bitstring,bitstring):bitstring.
fun pair(bitstring,bitstring):bitstring.
fun snd(bitstring):bitstring.
event eInstall(bitstring,bitstring).
event eSwitchState(bitstring).
equation forall x_1:bitstring, x_2:bitstring;   fst((x_1, x_2)) = x_1.
equation forall x_1:bitstring, x_2:bitstring;   snd((x_1, x_2)) = x_2.
(*executability*)
query SK:bitstring, a:bitstring, b:bitstring, i:time, j:time;
 ((event(eInstall( a, SK ))@i) && (event(eInstall( b, SK ))@j)) && (i < j)
.
let A()=
    new ANonce_1:bitstring;
    out(att,ANonce_1);
    in(att,BNonce_1:bitstring);
    let SK_1:bitstring=kdf(ANonce_1, BNonce_1) in
    event eInstall( ANonce_1, SK_1 );
    out(att,sACK).
let B()=
    in(att,ANonce_1:bitstring);
    new BNonce_1:bitstring;
    out(att,BNonce_1);
    in(att,=sACK);
    let SK_1:bitstring=kdf(ANonce_1, BNonce_1) in
    event eInstall( BNonce_1, SK_1 );
    event eSwitchState( sDONE ).


process
    !
    (((new ANonce_1:bitstring;
       out(att,ANonce_1);
       in(att,BNonce_1:bitstring);
       let SK_1:bitstring=kdf(ANonce_1, BNonce_1) in
       event eInstall( ANonce_1, SK_1 );
       out(att,sACK))
    | (in(att,ANonce_2:bitstring);
       new BNonce_2:bitstring;
       out(att,BNonce_2);
       in(att,=sACK);
       let SK_2:bitstring=kdf(ANonce_2, BNonce_2) in
       event eInstall( BNonce_2, SK_2 );
       event eSwitchState( sDONE ))))

