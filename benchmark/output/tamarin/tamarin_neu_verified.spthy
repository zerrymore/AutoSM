theory Neu_Stu begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman, xor
functions: adec/2, aenc/2, fst/1, h/1, id/1, pair/2, pk/1, sdec/2,
           senc/2, sign/2, snd/1, true/0, verify/3
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    fst(<x.1, x.2>) = x.1,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



heuristic: p





















rule (modulo E) Init[color=#ffffff, process="!"]:
   [ ] --[ Init( ) ]-> [ !Semistate_1( ) ]

rule (modulo E) p_1_[color=#ffffff, process="!"]:
   [ !Semistate_1( ), Fr( Kas.1 ), Fr( Kbs.1 ) ]
  -->
   [ State_1111( Kas.1, Kbs.1 ), Out( id(Kas.1) ) ]

rule (modulo E) outidKbs_0_1111[color=#ffffff,
                                process="out(id(Kbs.1));"]:
   [ State_1111( Kas.1, Kbs.1 ) ]
  -->
   [ State_11111( Kas.1, Kbs.1 ), Out( id(Kbs.1) ) ]

rule (modulo E) eventHonestAidKas_0_11111[color=#ffffff,
                                          process="event HonestA( id(Kas.1) );"]:
   [ State_11111( Kas.1, Kbs.1 ) ]
  --[ HonestA( id(Kas.1) ) ]->
   [ State_111111( Kas.1, Kbs.1 ) ]

rule (modulo E) eventHonestBidKbs_0_111111[color=#ffffff,
                                           process="event HonestB( id(Kbs.1) );"]:
   [ State_111111( Kas.1, Kbs.1 ) ]
  --[ HonestB( id(Kbs.1) ) ]->
   [ !Semistate_11111111( Kas.1, Kbs.1 ) ]

rule (modulo E) p_1_1111111[color=#ffffff, process="!"]:
   [ !Semistate_11111111( Kas.1, Kbs.1 ), Fr( idA.1 ), Fr( idB.1 ) ]
  -->
   [ State_11111111111( Kas.1, Kbs.1, idA.1, idB.1 ), Out( id(idA.1) ) ]

rule (modulo E) outididB_0_11111111111[color=#ffffff,
                                       process="out(id(idB.1));"]:
   [ State_11111111111( Kas.1, Kbs.1, idA.1, idB.1 ) ]
  -->
   [ State_111111111111( Kas.1, Kbs.1, idA.1, idB.1 ), Out( id(idB.1) ) ]

rule (modulo E) eventHonestIdAididA_0_111111111111[color=#ffffff,
                                                   process="event HonestIdA( id(idA.1) );"]:
   [ State_111111111111( Kas.1, Kbs.1, idA.1, idB.1 ) ]
  --[ HonestIdA( id(idA.1) ) ]->
   [ State_1111111111111( Kas.1, Kbs.1, idA.1, idB.1 ) ]

rule (modulo E) eventHonestIdBididB_0_1111111111111[color=#ffffff,
                                                    process="event HonestIdB( id(idB.1) );"]:
   [ State_1111111111111( Kas.1, Kbs.1, idA.1, idB.1 ) ]
  --[ HonestIdB( id(idB.1) ) ]->
   [ !Semistate_111111111111111( Kas.1, Kbs.1, idA.1, idB.1 ) ]

rule (modulo E) newNa_0_11111111111111111[color=#40804a,
                                          process="new Na.1;"]:
   [ State_11111111111111111( Kas.1, Kbs.1, idA.1, idB.1 ), Fr( Na.1 ) ]
  -->
   [
   State_1111111111111111111( Kas.1, Kbs.1, Na.1, idA.1, idB.1 ),
   Out( <id(idA.1), Na.1> )
   ]

rule (modulo E) incypher_0_1111111111111111111[color=#40804a,
                                               process="in(cypher.1);"]:
   [
   State_1111111111111111111( Kas.1, Kbs.1, Na.1, idA.1, idB.1 ),
   In( cypher.1 )
   ]
  -->
   [
   Let_111111111111111111111( cypher.1, Kas.1, Kbs.1, Na.1, cypher.1, idA.1,
                              idB.1
   )
   ]

rule (modulo E) letmsgmsgNbcypher_1_11111111111111111111[color=#ffffff,
                                                         process="let <msg1.1, msg2.1, Nb.1>=cypher.1"]:
   [
   Let_111111111111111111111( <msg1.1, msg2.1, Nb.1>, Kas.1, Kbs.1, Na.1,
                              cypher.1, idA.1, idB.1
   )
   ]
  -->
   [
   State_111111111111111111111( Kas.1, Kbs.1, Na.1, Nb.1, cypher.1, idA.1,
                                idB.1, msg1.1, msg2.1
   )
   ]

rule (modulo E) letididBNaKabTbsdecmsgKas_0_111111111111111111111[color=#ffffff,
                                                                  process="let <id(=idB.1), =Na.1, Kab.1, Tb.1>=sdec(msg1.1, Kas.1)"]:
   [
   State_111111111111111111111( Kas.1, Kbs.1, Na.1, Nb.1, cypher.1, idA.1,
                                idB.1, msg1.1, msg2.1
   )
   ]
  -->
   [
   Let_1111111111111111111111( sdec(msg1.1, Kas.1), Kas.1, Kbs.1, Na.1,
                               Nb.1, cypher.1, idA.1, idB.1, msg1.1, msg2.1
   )
   ]

rule (modulo E) letididBNaKabTbsdecmsgKas_1_111111111111111111111[color=#ffffff,
                                                                  process="let <id(=idB.1), =Na.1, Kab.1, Tb.1>=sdec(msg1.1, Kas.1)"]:
   [
   Let_1111111111111111111111( <id(idB.1), Na.1, Kab.1, Tb.1>, Kas.1, Kbs.1,
                               Na.1, Nb.1, cypher.1, idA.1, idB.1, msg1.1, msg2.1
   )
   ]
  -->
   [
   State_1111111111111111111111( Kab.1, Kas.1, Kbs.1, Na.1, Nb.1, Tb.1,
                                 cypher.1, idA.1, idB.1, msg1.1, msg2.1
   )
   ]

rule (modulo E) outmsgsencNbKab_0_1111111111111111111111[color=#40804a,
                                                         process="out(<msg2.1, senc(Nb.1, Kab.1)>);"]:
   [
   State_1111111111111111111111( Kab.1, Kas.1, Kbs.1, Na.1, Nb.1, Tb.1,
                                 cypher.1, idA.1, idB.1, msg1.1, msg2.1
   )
   ]
  -->
   [
   State_11111111111111111111111( Kab.1, Kas.1, Kbs.1, Na.1, Nb.1, Tb.1,
                                  cypher.1, idA.1, idB.1, msg1.1, msg2.1
   ),
   Out( <msg2.1, senc(Nb.1, Kab.1)> )
   ]

rule (modulo E) newMa_0_11111111111111111111111[color=#40804a,
                                                process="new Ma.1;"]:
   [
   State_11111111111111111111111( Kab.1, Kas.1, Kbs.1, Na.1, Nb.1, Tb.1,
                                  cypher.1, idA.1, idB.1, msg1.1, msg2.1
   ),
   Fr( Ma.1 )
   ]
  -->
   [
   State_1111111111111111111111111( Kab.1, Kas.1, Kbs.1, Ma.1, Na.1, Nb.1,
                                    Tb.1, cypher.1, idA.1, idB.1, msg1.1, msg2.1
   ),
   Out( <Ma.1, msg2.1> )
   ]

rule (modulo E) incypher_0_1111111111111111111111111[color=#40804a,
                                                     process="in(cypher2.1);"]:
   [
   State_1111111111111111111111111( Kab.1, Kas.1, Kbs.1, Ma.1, Na.1, Nb.1,
                                    Tb.1, cypher.1, idA.1, idB.1, msg1.1, msg2.1
   ),
   In( cypher2.1 )
   ]
  -->
   [
   Let_111111111111111111111111111( cypher2.1, Kab.1, Kas.1, Kbs.1, Ma.1,
                                    Na.1, Nb.1, Tb.1, cypher.1, cypher2.1, idA.1, idB.1, msg1.1, msg2.1
   )
   ]

rule (modulo E) letMbmsgcypher_1_11111111111111111111111111[color=#ffffff,
                                                            process="let <Mb.1, msg3.1>=cypher2.1"]:
   [
   Let_111111111111111111111111111( <Mb.1, msg3.1>, Kab.1, Kas.1, Kbs.1,
                                    Ma.1, Na.1, Nb.1, Tb.1, cypher.1, cypher2.1, idA.1, idB.1, msg1.1, msg2.1
   )
   ]
  -->
   [
   State_111111111111111111111111111( Kab.1, Kas.1, Kbs.1, Ma.1, Mb.1, Na.1,
                                      Nb.1, Tb.1, cypher.1, cypher2.1, idA.1, idB.1, msg1.1, msg2.1, msg3.1
   )
   ]

rule (modulo E) letMasdecmsgKab_0_111111111111111111111111111[color=#ffffff,
                                                              process="let =Ma.1=sdec(msg3.1, Kab.1)"]:
   [
   State_111111111111111111111111111( Kab.1, Kas.1, Kbs.1, Ma.1, Mb.1, Na.1,
                                      Nb.1, Tb.1, cypher.1, cypher2.1, idA.1, idB.1, msg1.1, msg2.1, msg3.1
   )
   ]
  -->
   [
   Let_1111111111111111111111111111( sdec(msg3.1, Kab.1), Kab.1, Kas.1,
                                     Kbs.1, Ma.1, Mb.1, Na.1, Nb.1, Tb.1, cypher.1, cypher2.1, idA.1, idB.1,
                                     msg1.1, msg2.1, msg3.1
   )
   ]

rule (modulo E) letMasdecmsgKab_1_111111111111111111111111111[color=#ffffff,
                                                              process="let =Ma.1=sdec(msg3.1, Kab.1)"]:
   [
   Let_1111111111111111111111111111( Ma.1, Kab.1, Kas.1, Kbs.1, Ma.1, Mb.1,
                                     Na.1, Nb.1, Tb.1, cypher.1, cypher2.1, idA.1, idB.1, msg1.1, msg2.1,
                                     msg3.1
   )
   ]
  -->
   [
   State_1111111111111111111111111111( Kab.1, Kas.1, Kbs.1, Ma.1, Mb.1,
                                       Na.1, Nb.1, Tb.1, cypher.1, cypher2.1, idA.1, idB.1, msg1.1, msg2.1,
                                       msg3.1
   )
   ]

rule (modulo E) outsencMbKab_0_1111111111111111111111111111[color=#40804a,
                                                            process="out(senc(Mb.1, Kab.1));"]:
   [
   State_1111111111111111111111111111( Kab.1, Kas.1, Kbs.1, Ma.1, Mb.1,
                                       Na.1, Nb.1, Tb.1, cypher.1, cypher2.1, idA.1, idB.1, msg1.1, msg2.1,
                                       msg3.1
   )
   ]
  -->
   [ Out( senc(Mb.1, Kab.1) ) ]

rule (modulo E) p_1_11111111111111[color=#ffffff, process="!"]:
   [ !Semistate_111111111111111( Kas.1, Kbs.1, idA.1, idB.1 ) ]
  -->
   [
   !Semistate_11111111111111121( Kas.1, Kbs.1, idA.1, idB.1 ),
   State_11111111111111111( Kas.1, Kbs.1, idA.1, idB.1 )
   ]

rule (modulo E) incypher_0_1111111111111112111[color=#40804a,
                                               process="in(cypher3.1);"]:
   [
   State_1111111111111112111( Kas.1, Kbs.1, idA.1, idB.1 ), In( cypher3.1 )
   ]
  -->
   [
   Let_111111111111111211111( cypher3.1, Kas.1, Kbs.1, cypher3.1, idA.1,
                              idB.1
   )
   ]

rule (modulo E) letididANacypher_1_11111111111111121111[color=#ffffff,
                                                        process="let <id(=idA.1), Na.2>=cypher3.1"]:
   [
   Let_111111111111111211111( <id(idA.1), Na.2>, Kas.1, Kbs.1, cypher3.1,
                              idA.1, idB.1
   )
   ]
  -->
   [
   State_111111111111111211111( Kas.1, Kbs.1, cypher3.1, idA.1, idB.1, Na.2
   )
   ]

rule (modulo E) newTb_0_111111111111111211111[color=#40804a,
                                              process="new Tb.2;"]:
   [
   State_111111111111111211111( Kas.1, Kbs.1, cypher3.1, idA.1, idB.1, Na.2
   ),
   Fr( Tb.2 ), Fr( Nb.2 )
   ]
  -->
   [
   State_111111111111111211111111( Kas.1, Kbs.1, cypher3.1, idA.1, idB.1,
                                   Na.2, Nb.2, Tb.2
   ),
   Out( <id(idB.1), senc(<id(idA.1), Na.2, Tb.2>, Kbs.1), Nb.2> )
   ]

rule (modulo E) incypher_0_111111111111111211111111[color=#40804a,
                                                    process="in(cypher4.1);"]:
   [
   State_111111111111111211111111( Kas.1, Kbs.1, cypher3.1, idA.1, idB.1,
                                   Na.2, Nb.2, Tb.2
   ),
   In( cypher4.1 )
   ]
  -->
   [
   Let_11111111111111121111111111( cypher4.1, Kas.1, Kbs.1, cypher3.1,
                                   cypher4.1, idA.1, idB.1, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) letmsgmsgcypher_1_1111111111111112111111111[color=#ffffff,
                                                            process="let <msg4.1, msg5.1>=cypher4.1"]:
   [
   Let_11111111111111121111111111( <msg4.1, msg5.1>, Kas.1, Kbs.1,
                                   cypher3.1, cypher4.1, idA.1, idB.1, Na.2, Nb.2, Tb.2
   )
   ]
  -->
   [
   State_11111111111111121111111111( Kas.1, Kbs.1, cypher3.1, cypher4.1,
                                     idA.1, idB.1, msg4.1, msg5.1, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) letididAKabTbsdecmsgKbs_0_11111111111111121111111111[color=#ffffff,
                                                                     process="let <id(=idA.1), Kab.2, =Tb.2>=sdec(msg4.1, Kbs.1)"]:
   [
   State_11111111111111121111111111( Kas.1, Kbs.1, cypher3.1, cypher4.1,
                                     idA.1, idB.1, msg4.1, msg5.1, Na.2, Nb.2, Tb.2
   )
   ]
  -->
   [
   Let_111111111111111211111111111( sdec(msg4.1, Kbs.1), Kas.1, Kbs.1,
                                    cypher3.1, cypher4.1, idA.1, idB.1, msg4.1, msg5.1, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) letididAKabTbsdecmsgKbs_1_11111111111111121111111111[color=#ffffff,
                                                                     process="let <id(=idA.1), Kab.2, =Tb.2>=sdec(msg4.1, Kbs.1)"]:
   [
   Let_111111111111111211111111111( <id(idA.1), Kab.2, Tb.2>, Kas.1, Kbs.1,
                                    cypher3.1, cypher4.1, idA.1, idB.1, msg4.1, msg5.1, Na.2, Nb.2, Tb.2
   )
   ]
  -->
   [
   State_111111111111111211111111111( Kas.1, Kbs.1, cypher3.1, cypher4.1,
                                      idA.1, idB.1, msg4.1, msg5.1, Kab.2, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) letNbsdecmsgKab_0_111111111111111211111111111[color=#ffffff,
                                                              process="let =Nb.2=sdec(msg5.1, Kab.2)"]:
   [
   State_111111111111111211111111111( Kas.1, Kbs.1, cypher3.1, cypher4.1,
                                      idA.1, idB.1, msg4.1, msg5.1, Kab.2, Na.2, Nb.2, Tb.2
   )
   ]
  -->
   [
   Let_1111111111111112111111111111( sdec(msg5.1, Kab.2), Kas.1, Kbs.1,
                                     cypher3.1, cypher4.1, idA.1, idB.1, msg4.1, msg5.1, Kab.2, Na.2, Nb.2,
                                     Tb.2
   )
   ]

rule (modulo E) letNbsdecmsgKab_1_111111111111111211111111111[color=#ffffff,
                                                              process="let =Nb.2=sdec(msg5.1, Kab.2)"]:
   [
   Let_1111111111111112111111111111( Nb.2, Kas.1, Kbs.1, cypher3.1,
                                     cypher4.1, idA.1, idB.1, msg4.1, msg5.1, Kab.2, Na.2, Nb.2, Tb.2
   )
   ]
  -->
   [
   State_1111111111111112111111111111( Kas.1, Kbs.1, cypher3.1, cypher4.1,
                                       idA.1, idB.1, msg4.1, msg5.1, Kab.2, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) incypher_0_1111111111111112111111111111[color=#40804a,
                                                        process="in(cypher5.1);"]:
   [
   State_1111111111111112111111111111( Kas.1, Kbs.1, cypher3.1, cypher4.1,
                                       idA.1, idB.1, msg4.1, msg5.1, Kab.2, Na.2, Nb.2, Tb.2
   ),
   In( cypher5.1 )
   ]
  -->
   [
   Let_111111111111111211111111111111( cypher5.1, Kas.1, Kbs.1, cypher3.1,
                                       cypher4.1, cypher5.1, idA.1, idB.1, msg4.1, msg5.1, Kab.2, Na.2, Nb.2,
                                       Tb.2
   )
   ]

rule (modulo E) letMamsgcypher_1_11111111111111121111111111111[color=#ffffff,
                                                               process="let <Ma.2, msg6.1>=cypher5.1"]:
   [
   Let_111111111111111211111111111111( <Ma.2, msg6.1>, Kas.1, Kbs.1,
                                       cypher3.1, cypher4.1, cypher5.1, idA.1, idB.1, msg4.1, msg5.1, Kab.2,
                                       Na.2, Nb.2, Tb.2
   )
   ]
  -->
   [
   State_111111111111111211111111111111( Kas.1, Kbs.1, cypher3.1, cypher4.1,
                                         cypher5.1, idA.1, idB.1, msg4.1, msg5.1, msg6.1, Kab.2, Ma.2, Na.2,
                                         Nb.2, Tb.2
   )
   ]

rule (modulo E) letididAKabTbsdecmsgKbs_0_111111111111111211111111111111[color=#ffffff,
                                                                         process="let <id(=idA.1), =Kab.2, =Tb.2>=sdec(msg6.1, Kbs.1)"]:
   [
   State_111111111111111211111111111111( Kas.1, Kbs.1, cypher3.1, cypher4.1,
                                         cypher5.1, idA.1, idB.1, msg4.1, msg5.1, msg6.1, Kab.2, Ma.2, Na.2,
                                         Nb.2, Tb.2
   )
   ]
  -->
   [
   Let_1111111111111112111111111111111( sdec(msg6.1, Kbs.1), Kas.1, Kbs.1,
                                        cypher3.1, cypher4.1, cypher5.1, idA.1, idB.1, msg4.1, msg5.1, msg6.1,
                                        Kab.2, Ma.2, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) letididAKabTbsdecmsgKbs_1_111111111111111211111111111111[color=#ffffff,
                                                                         process="let <id(=idA.1), =Kab.2, =Tb.2>=sdec(msg6.1, Kbs.1)"]:
   [
   Let_1111111111111112111111111111111( <id(idA.1), Kab.2, Tb.2>, Kas.1,
                                        Kbs.1, cypher3.1, cypher4.1, cypher5.1, idA.1, idB.1, msg4.1, msg5.1,
                                        msg6.1, Kab.2, Ma.2, Na.2, Nb.2, Tb.2
   )
   ]
  -->
   [
   State_1111111111111112111111111111111( Kas.1, Kbs.1, cypher3.1,
                                          cypher4.1, cypher5.1, idA.1, idB.1, msg4.1, msg5.1, msg6.1, Kab.2,
                                          Ma.2, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) newMb_0_1111111111111112111111111111111[color=#40804a,
                                                        process="new Mb.2;"]:
   [
   State_1111111111111112111111111111111( Kas.1, Kbs.1, cypher3.1,
                                          cypher4.1, cypher5.1, idA.1, idB.1, msg4.1, msg5.1, msg6.1, Kab.2,
                                          Ma.2, Na.2, Nb.2, Tb.2
   ),
   Fr( Mb.2 )
   ]
  -->
   [
   State_111111111111111211111111111111111( Kas.1, Kbs.1, cypher3.1,
                                            cypher4.1, cypher5.1, idA.1, idB.1, msg4.1, msg5.1, msg6.1, Kab.2,
                                            Ma.2, Mb.2, Na.2, Nb.2, Tb.2
   ),
   Out( <Mb.2, senc(Ma.2, Kab.2)> )
   ]

rule (modulo E) incypher_0_111111111111111211111111111111111[color=#40804a,
                                                             process="in(cypher7.1);"]:
   [
   State_111111111111111211111111111111111( Kas.1, Kbs.1, cypher3.1,
                                            cypher4.1, cypher5.1, idA.1, idB.1, msg4.1, msg5.1, msg6.1, Kab.2,
                                            Ma.2, Mb.2, Na.2, Nb.2, Tb.2
   ),
   In( cypher7.1 )
   ]
  -->
   [
   Let_11111111111111121111111111111111111( sdec(cypher7.1, Kab.2), Kas.1,
                                            Kbs.1, cypher3.1, cypher4.1, cypher5.1, cypher7.1, idA.1, idB.1,
                                            msg4.1, msg5.1, msg6.1, Kab.2, Ma.2, Mb.2, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) letMbsdeccypherKab_1_1111111111111112111111111111111111[color=#ffffff,
                                                                        process="let =Mb.2=sdec(cypher7.1, Kab.2)"]:
   [
   Let_11111111111111121111111111111111111( Mb.2, Kas.1, Kbs.1, cypher3.1,
                                            cypher4.1, cypher5.1, cypher7.1, idA.1, idB.1, msg4.1, msg5.1,
                                            msg6.1, Kab.2, Ma.2, Mb.2, Na.2, Nb.2, Tb.2
   )
   ]
  -->
   [
   State_11111111111111121111111111111111111( Kas.1, Kbs.1, cypher3.1,
                                              cypher4.1, cypher5.1, cypher7.1, idA.1, idB.1, msg4.1, msg5.1,
                                              msg6.1, Kab.2, Ma.2, Mb.2, Na.2, Nb.2, Tb.2
   )
   ]

rule (modulo E) p_1_1111111111111112[color=#ffffff, process="!"]:
   [ !Semistate_11111111111111121( Kas.1, Kbs.1, idA.1, idB.1 ) ]
  -->
   [
   !Semistate_1111111111111112121( Kas.1, Kbs.1, idA.1, idB.1 ),
   State_1111111111111112111( Kas.1, Kbs.1, idA.1, idB.1 )
   ]

rule (modulo E) p_1_111111111111111212[color=#ffffff, process="!"]:
   [
   !Semistate_1111111111111112121( Kas.1, Kbs.1, idA.1, idB.1 ),
   In( cypher8.1 )
   ]
  -->
   [
   Let_1111111111111112121111( cypher8.1, Kas.1, Kbs.1, cypher8.1, idA.1,
                               idB.1
   )
   ]

rule (modulo E) letididBmsgNbcypher_1_111111111111111212111[color=#ffffff,
                                                            process="let <id(=idB.1), msg7.1, Nb.3>=cypher8.1"]:
   [
   Let_1111111111111112121111( <id(idB.1), msg7.1, Nb.3>, Kas.1, Kbs.1,
                               cypher8.1, idA.1, idB.1
   )
   ]
  -->
   [
   State_1111111111111112121111( Kas.1, Kbs.1, cypher8.1, idA.1, idB.1,
                                 msg7.1, Nb.3
   )
   ]

rule (modulo E) letididANaTbsdecmsgKbs_0_1111111111111112121111[color=#ffffff,
                                                                process="let <id(=idA.1), Na.3, Tb.3>=sdec(msg7.1, Kbs.1)"]:
   [
   State_1111111111111112121111( Kas.1, Kbs.1, cypher8.1, idA.1, idB.1,
                                 msg7.1, Nb.3
   )
   ]
  -->
   [
   Let_11111111111111121211111( sdec(msg7.1, Kbs.1), Kas.1, Kbs.1,
                                cypher8.1, idA.1, idB.1, msg7.1, Nb.3
   )
   ]

rule (modulo E) letididANaTbsdecmsgKbs_1_1111111111111112121111[color=#ffffff,
                                                                process="let <id(=idA.1), Na.3, Tb.3>=sdec(msg7.1, Kbs.1)"]:
   [
   Let_11111111111111121211111( <id(idA.1), Na.3, Tb.3>, Kas.1, Kbs.1,
                                cypher8.1, idA.1, idB.1, msg7.1, Nb.3
   )
   ]
  -->
   [
   State_11111111111111121211111( Kas.1, Kbs.1, cypher8.1, idA.1, idB.1,
                                  msg7.1, Na.3, Nb.3, Tb.3
   )
   ]

rule (modulo E) newKab_0_11111111111111121211111[color=#408051,
                                                 process="new Kab.3;"]:
   [
   State_11111111111111121211111( Kas.1, Kbs.1, cypher8.1, idA.1, idB.1,
                                  msg7.1, Na.3, Nb.3, Tb.3
   ),
   Fr( Kab.3 )
   ]
  -->
   [
   Out( <senc(<id(idB.1), Na.3, Kab.3, Tb.3>, Kas.1), 
         senc(<id(idA.1), Kab.3, Tb.3>, Kbs.1), Nb.3>
   )
   ]

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula



























end

