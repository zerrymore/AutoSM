theory Denning_Sacco_protocol
begin

functions: kas/1, kbs/1, aenc/2, adec/2
equations: adec(aenc(m,pk(sk)),sk)=m

let S(Kas, Kbs) =
  in(msg1);
  let <A,B> = msg1 in
  new Kab;
  new T;
  let enc_part = aenc(<Kab,A,T>,Kbs) in
  let resp = <B,Kab,T,enc_part> in
  event OUT_S(resp);
  out(resp)

let A(Kas) =
  event HonestA;
  in(resp);
  let <B,Kab,T,enc_part> = resp in
  let <Kab,A,T> = adec(enc_part, Kas) in
  event IN_A(resp);
  event SessionBuiltA(Kab, A, B)

let B(Kbs) =
  event HonestB;
  in(resp);
  let <B,Kab,T,enc_part> = resp in
  let <Kab,A,T> = adec(enc_part, Kbs) in
  event IN_B(resp);
  event SessionBuiltB(Kab, A, B)

process:
!(
  new Kas; out(kas(Kas)); event HonestKDC(kas(Kas));
  new Kbs; out(kbs(Kbs)); event HonestB(kbs(Kbs));
  !(
    (!S(Kas, Kbs) | !A(Kas)) | !B(Kbs)
  )
)
end