theory Key_Exchange_Protocol
begin

functions: pk/1, senc/2, sdec/2, h/1
equations: sdec(senc(m, k), k) = m

let Client(pkS) =
  new k;
  event OUT_C_1(senc(k, pkS));
  out(senc(k, pkS));
  in(hash);
  event IN_C_2(hash);
  event SessionBuiltC(k, hash)

let Server() =
  in(cipher);
  let k = sdec(cipher, skS) in
  let hash = h(k) in
  event OUT_S_1(hash);
  out(hash);
  event SessionBuiltS(k, hash)

process:
!(
  new skS; out(pk(skS)); event HonestS(pk(skS));
  !(
    new pkS; in(pkS);
    (!Client(pkS) | !Server())
  )
)
end