theory Key_Exchange_Protocol
begin

functions: pk/1, senc/2, sdec/2, h/1
equations: sdec(senc(m, k), k) = m

let Client(pkS) =
  new k;
  let cypher = senc(k, pkS) in
  event OUT_C(cypher);
  out(cypher);
  in(hash);
  event IN_C(hash);
  event SessionBuilt(k);
  event SessionC(pkS, k)

let Server() =
  in(cypher);
  let k = sdec(cypher, skS) in
  let hash = h(k) in
  event IN_S(cypher);
  event OUT_S(hash);
  out(hash);
  event SessionBuilt(k);
  event SessionS(pkC, k)

process:
!(
  new skS; out(pk(skS)); event HonestS(pk(skS));
  !(
    new pkC; out(pk(pkC)); event HonestC(pk(pkC));
    (!Client(pkS) | !Server())
  )
)
end