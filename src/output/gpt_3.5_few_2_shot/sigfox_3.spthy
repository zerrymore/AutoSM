theory SigFox_Protocol
begin

functions: pk/1, sk/1, aenc/2, adec/2, sign/2, verify/3
equations: adec(aenc(m,pk(sk)),sk)=m, verify(m, sign(m, sk), pk(sk))=true

let Server(pkA, skA, pkB)=
  new na;
  let message = aenc(<pkA, na>, pkB);
  let signature = sign(message, skA);
  event OUT_A(message, signature);
  out(message, signature);
  in(m, sig);
  event IN_B(m, sig);
  let valid = verify(m, sig, pkA) in
  event VerifiedB(valid);
  0

let Client(pkA, skB, pkB) =
  in(message, signature);
  event IN_A(message, signature);
  let valid = verify(message, signature, pkB) in
  event VerifiedA(valid);
  0

process:
!(
  new pkA, skA; out(pkA);
  new pkB, skB; out(pkB);
  (!Server(pkA, skA, pkB) | !Client(pkA, skB, pkB))
)
end