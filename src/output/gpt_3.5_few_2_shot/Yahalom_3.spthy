theory Needham_Schroeder_Key_Exchange
begin

functions: pk/1, aenc/2, adec/2
equations: adec(aenc(m,pk(sk)),sk)=m

let A_B(skA, pkB)=      
  new Na;
  event OUT_A_1(aenc(<A, Na>, pkB));
  out(aenc( <A, Na> ,pkB));
  in(cypher1);
  let mess1 = adec(cypher1,skA) in
  let <=B, <=Na, xNb>> = mess1 in
  event IN_B_1(B, Na, xNb, aenc(<A, Na, xNb>, pkB));
  event OUT_A_2(aenc(<Na, xNb>, pk(skA)));
  out(aenc(<Na, xNb>, pk(skA)));
  event SessionBuiltA(pk(skA), pkB, Na, xNb);
  event SessionA(pk(skA), pkB, Na) 
  
let B_S(skB, pkS) =  
  in(cypher2);
  let mess2 = adec(cypher2,skB) in
  let <=A, <=Na, Nb>> = mess2 in
  event IN_S_1(A, Kab, Na, Nb, aenc(<B, Kab, Na, Nb>, pkS));
  event OUT_B_1(aenc(<A, Kab, Na, Nb>, pk(skB)));
  out(aenc(<A, Kab, Na, Nb>, pk(skB)));
  in(cypher3);
  let mess3 = adec(cypher3,skB) in
  let <=A, Kab>> = mess3 in
  event IN_S_2(A, Kab, aenc(<A, Kab>, pk(skB)));
  event SessionBuiltB(pk(skB), A, Kab, Na, Nb);
  event SessionB(pkS, pk(skB), A, Kab, Na, Nb)

let S_A(pkS, skA) = 
  in(cypher4);
  let mess4 = adec(cypher4,skA) in
  let <=B, Kab, Na, Nb>> = mess4 in
  event IN_A_2(B, Kab, Na, Nb, aenc(<B, Kab, Na, Nb>, pk(skA)));
  event OUT_S_1(aenc(<B, Kab, Na, Nb>, pk(pkS)));
  out(aenc(<B, Kab, Na, Nb>, pk(pkS)));
  event OUT_S_2(aenc(<A, Kab>, pk(skA)));
  out(aenc(<A, Kab>, pk(skA)));
  event SessionBuiltS(pkS, pk(skA), B, Kab, Na, Nb);
  event SessionS(pkS, pk(skA), B, Kab, Na, Nb)

let A_B2(skA, pkB) = 
  in(cypher5);
  let mess5 = adec(cypher5,skA) in
  let <=A, Kab>> = mess5 in
  event IN_B_2(A, Kab, aenc(<A, Kab>, pk(skA)));
  in(cypher6);
  let mess6 = adec(cypher6,Kab) in
  let <=Nb>> = mess6 in
  event IN_B_3(Nb, aenc(Nb, Kab));
  event SessionBuiltA2(pk(skA), pkB, A, Kab, Nb);
  event SessionA2(pk(skA), pkB, A, Kab, Nb);
  event OUT_A_3(aenc(Nb, pkB));
  out(aenc(Nb, pkB))

process:
!(
  new skA; out(pk(skA)); event HonestA(pk(skA));
  !(
    new skB; out(pk(skB)); event HonestB(pk(skB));
    !(
      new pkS; out(pk(pkS)); event HonestS(pk(pkS));
      (!A_B(skA, pk(skB)) | !B_S(skB, pk(pkS)) | !S_A(pk(pkS), skA) | !A_B2(skA, pk(skB)))
    )
  )
)   
end