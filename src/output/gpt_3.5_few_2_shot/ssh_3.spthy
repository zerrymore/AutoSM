theory SSH_protocol
begin

functions: hash/1, exp/3, verify/3
equations: verify(s, m, pk) = true

let C(p, g, q, V_S, V_C, K_S, I_C, I_S) =
  new x;
  let e = exp(g, x, p) in
  event OUT_C_1(e);
  out(e);
  in(K_S, f, s);
  let K = exp(e, x, p) in
  let H = hash(V_C || V_S || I_C || I_S || K_S || e || f || K) in
  event IN_C_2(K_S, f, s);
  event SessionBuiltC(K, H);
  event SessionC(K_S, V_C, V_S)

let S(p, g, q, V_S, V_C, K_S, I_C, I_S) =
  new y;
  let f = exp(g, y, p) in
  in(e);
  let K = exp(e, y, p) in
  let H = hash(V_C || V_S || I_C || I_S || K_S || e || f || K) in
  let s = sign(H, sk(K_S)) in
  event IN_S_1(e);
  event OUT_S_2(K_S, f, s);
  out(K_S, f, s);
  event SessionBuiltS(K, H);
  event SessionS(K_S, V_C, V_S)

process:
!(
  new p, g, q, V_S, V_C, K_S, I_C, I_S;
  event PublicParameters(p, g, q);
  !(
    new sk(K_S); out(pk(K_S)); event HonestS(pk(K_S));
    !(
      !C(p, g, q, V_S, V_C, K_S, I_C, I_S) |
      !S(p, g, q, V_S, V_C, K_S, I_C, I_S)
    )
  )
)
end