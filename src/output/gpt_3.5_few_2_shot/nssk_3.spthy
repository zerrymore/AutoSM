theory Server_Authentication_Protocol
begin

functions: senc/2, sdec/2
equations: sdec(senc(m, k), k) = m

let Alice(A, B) =
  new Na;
  event OUT_I_1(senc(<A, B, Na>, Kas));
  out(senc(<A, B, Na>, Kas));
  in(cypher1);
  let <Na, Kab, cypher2> = sdec(cypher1, Kbs) in
  event IN_I_2(Na, Kab, cypher2);
  event OUT_I_2(senc(<Kab, A>, Kbs));
  out(senc(<Kab, A>, Kbs));
  in(cypher3);
  let Nb = sdec(cypher3, Kab) in
  event IN_I_3(Nb);
  let enc_Nb = senc(Nb, Kab) in
  event OUT_I_3(enc_Nb);
  out(enc_Nb);
  0

let Bob(B) =
  in(cypher1);
  let <Kab, A> = sdec(cypher1, Kbs) in
  event IN_R_1(Kab, A);
  new Nb;
  let enc_Nb = senc(Nb, Kab) in
  event OUT_R_1(enc_Nb);
  out(enc_Nb);
  in(enc_Nb2);
  let Nb2 = sdec(enc_Nb2, Kab) in
  event IN_R_2(Nb2);
  0

process:
!(
  new Kas, Kbs;
  let A = "Alice";
  let B = "Bob";
  let Kab = "Kab";
  (!Alice(A, B) | !Bob(B))
)
end