theory Denning_Sacco_protocol
begin

functions: kas/1, kbs/1, aenc/2, adec/2
equations: adec(aenc(m,pk(sk)),sk)=m

let Alice() = 
  new A, B;
  event OUT_A_1(A,B);
  out(A, B);
  in(cypher);
  let mess = adec(cypher, kas) in
  let <B, Kab, T, enc_part> = mess in
  event IN_A_2(B, Kab, T, enc_part);
  event OUT_A_2(enc_part);
  out(enc_part);
  event SessionBuilt(A, B, Kab)

let KDC() = 
  in(A, B);
  new Kab, T;
  let enc_part = aenc(<Kab, A, T>, kbs) in
  event IN_KDC_1(A, B);
  event OUT_KDC_1(B, Kab, T, enc_part);
  out(B, Kab, T, enc_part);
  event SessionBuilt(A, B, Kab)

let Bob() = 
  in(enc_part);
  let <Kab, A, T> = adec(enc_part, kbs) in
  event IN_B_1(Kab, A, T);
  event SessionBuilt(A, B, Kab)

process:
!(
  new kas, kbs;
  event HonestKDC(kas, kbs);
  !(
    (!Alice() | !KDC()) |
    !Bob()
  )
)
end