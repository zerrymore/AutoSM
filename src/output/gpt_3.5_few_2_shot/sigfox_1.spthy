theory SigFox_Protocol
begin

functions: pk/1, sk/1, aenc/2, adec/2, sign/2, verify/2
equations: adec(aenc(m,pk(sk)),sk)=m, verify(m, sign(m, sk(pk)))=true

let Server(pkA, skA, pkB) =
  new na;
  let mess = aenc(<pkA, na>, pkB) in
  let sig = sign(mess, skA) in
  event OUT_A(mess, sig);
  out(mess, sig);
  0

let Client(pkA, skB) =
  in(mess, sig);
  event IN_B(mess, sig);
  let valid = verify(mess, sig) in
  event VerificationResult(valid);
  0

process:
!(
  new pkA, skA; out(pkA); event ServerPublicKey(pkA);
  new pkB, skB; out(pkB); event ClientPublicKey(pkB);
  (!Server(pkA, skA, pkB) | !Client(pkA, skB))
)
end