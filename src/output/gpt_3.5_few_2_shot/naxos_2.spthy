theory Diffie_Hellman_Key_Exchange
begin

constants: g
functions: h1/2, h2/1, exp/2
equations: exp(g, h1(eskI, lkI)) = exp(g, h1(eskR, lkR))

let I(lkI, eskI) =
  let X = exp(g, h1(eskI, lkI)) in
  event OUT_I(X);
  in(Y);
  let kI = h2(exp(Y, lkI)) in
  event SessionBuiltI(kI);
  0

let R(lkR, eskR) =
  in(X);
  let Y = exp(g, h1(eskR, lkR)) in
  event OUT_R(Y);
  let kR = h2(exp(X, lkR)) in
  event SessionBuiltR(kR);
  0

process:
!(
  new lkI, eskI;
  let pkI = exp(g, lkI) in
  event HonestI(pkI);
  out(pkI);
  !(
    new lkR, eskR;
    let pkR = exp(g, lkR) in
    event HonestR(pkR);
    out(pkR);
    (!I(lkI, eskI) | !R(lkR, eskR))
  )
)
end