theory Key_Confirmation_Protocol
begin

functions: pk/1, senc/2, aenc/2, adec/2, h/1
equations: adec(aenc(m,pk(sk)),sk)=m, sdec(senc(m, k), k) = m

let Client(skC, pkS) = 
  new k;
  event OUT_C_1(aenc(k,pkS));
  out(aenc(k,pkS));
  in(cypher);
  let mess = sdec(cypher, k) in
  let =h(k) = mess in
  event IN_C_2(h(k), senc(h(k), k));
  event SessionBuiltC(skC, k)

let Server(skS, pkC) = 
  in(cypher);
  let mess = adec(cypher, skS) in
  let xk = mess in
  event IN_S_1(xk, aenc(xk, pk(skS)));
  event OUT_S_1(senc(h(xk), xk));
  out(senc(h(xk), xk));
  event SessionBuiltS(skS, xk)

process:
!(
  new skC; out(pk(skC)); event HonestC(pk(skC));
  new skS; out(pk(skS)); event HonestS(pk(skS));
  (!Client(skC, pk(skS)) | !Server(skS, pk(skC)))
)   
end
