theory SigFox_protocol
begin

functions: pk/1, ltk/1, aenc/2, adec/2, sign/2, verify/2
equations: adec(aenc(m,pk(sk)),sk)=m, verify(sign(m,ltk(k)),pk(k))=m

let Server_A(ltkA, pkB)=      
  new na;
  let mess = aenc(<pk(ltkA), na>,pkB) in
  let sig = sign(mess, ltkA) in
  event OUT_A_1(<mess, sig>);
  out(<mess, sig>);

let Device_B(ltkB, pkA)=  
  in(<cypher, sig>);
  let mess = verify(sig, pkA) in
  let mess1 = adec(cypher,ltkB) in
  let <=pkA,xna> = mess1 in
  event IN_B_1_ni(xna,<cypher, sig>);
  event SessionBuiltB(pk(ltkB),xna);

process:
!(
  new ltkA; out(pk(ltkA)); event HonestA(pk(ltkA));
  !(
    new ltkB; out(pk(ltkB)); event HonestB(pk(ltkB));
    (!Server_A(ltkA, pk(ltkB)) | !Device_B(ltkB, pk(ltkA)))
  )
)   
end
