theory SSH_protocol
begin

functions: hash/1, g/1, p/1, q/1, e/1, f/1, s/1, K/1, V_C/1, V_S/1, I_C/1, I_S/1, K_S/1, x/1, y/1, mod/2, pow/2

let Client(V_C, V_S, I_C, I_S, K_S) = 
  new x;
  let e = pow(g(), x) mod p() in
  out(e);
  in(K_S, f, s);
  let K = pow(f, x) mod p() in
  let H = hash(V_C || V_S || I_C || I_S || K_S || e || f || K) in
  event VerifySignature(s, H);

let Server(V_C, V_S, I_C, I_S, K_S) = 
  new y;
  let f = pow(g(), y) mod p() in
  in(e);
  let K = pow(e, y) mod p() in
  let H = hash(V_C || V_S || I_C || I_S || K_S || e || f || K) in
  let s = Signature(H, K_S) in
  out(K_S, f, s);

process:
!(
    new V_C; new V_S; new I_C; new I_S; new K_S;
    (!Client(V_C, V_S, I_C, I_S, K_S) | !Server(V_C, V_S, I_C, I_S, K_S))
)
end
