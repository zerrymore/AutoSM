theory Woo_Lam_Pi_f_protocol
begin

functions: senc/2, sdec/2
equations: sdec(senc(m, k), k) = m

let Alice(Kas, idA, idB, idS) = 
  out(idA);
  in(Nb);
  let cypher = senc(<idA, idB, Nb>, Kas) in
  out(cypher);

let Bob(Kbs, idB, idS) =
  in(idA);
  new Nb;
  out(Nb);
  in(cypherA);
  let msg = senc(<cypherA, idB, Nb>, Kbs) in
  out(msg);
  in(cypherS);
  let <idA, =idB, =Nb> = sdec(cypherS, Kbs) in
  0

let Server(Kas, Kbs, idS) =
  in(cypherB);
  let <cypherA, idB, Nb> = sdec(cypherB, Kbs) in
  let <idA, =idB, =Nb> = sdec(cypherA, Kas) in
  let cypherS = senc(<idA, idB, Nb>, Kbs) in
  out(cypherS)

process:
!(
    new Kas; new Kbs; 
    let idS = id(Kas, Kbs); out(idS);
    (!Alice(Kas, idA, idB, idS) | !Bob(Kbs, idB, idS) | !Server(Kas, Kbs, idS))
)
end
