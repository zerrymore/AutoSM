theory Denning_Sacco_protocol
begin

functions: senc/2, sdec/2
equations: sdec(senc(m, k), k) = m

let Alice(Kas, idA, idB) = 
  out(idA, idB);
  in(cypher);
  let < =idB, Kab, T, cypher2> = sdec(cypher, Kas) in
  out(cypher2);

let KDC(Kas, Kbs, idA, idB) = 
  in(=idA, =idB);
  new Kab;
  new T;
  let cypher2 = senc(<Kab, idA, T>, Kbs) in
  let cypher = senc(<idB, Kab, T, cypher2>, Kas) in
  out(cypher);

let Bob(Kbs, idA, idB) = 
  in(cypher2);
  let <Kab, =idA, T> = sdec(cypher2, Kbs) in
  0

process:
!(
  new Kas; new Kbs;
  let idA = id(Kas); let idB = id(Kbs);
  out(idA); out(idB);
  (!Alice(Kas, idA, idB) | !KDC(Kas, Kbs, idA, idB) | !Bob(Kbs, idA, idB))
)
end
