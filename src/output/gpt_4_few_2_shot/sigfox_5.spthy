theory SigFox_protocol
begin

functions: pk/1, ltk/1, aenc/2, adec/2, sign/2, verify/2
equations: adec(aenc(m,pk(sk)),sk)=m, verify(sign(m,ltk(x)),pk(x))=m

let Server_A(ltkA, pkB) =      
  new na;
  let mess = aenc(<pk(ltkA), na>, pkB) in
  let sig = sign(mess, ltkA) in
  out(<mess, sig>);

let Device_B(pkA, ltkB) =  
  in(<mess, sig>);
  let ver_mess = verify(sig, pkA) in
  let =mess = ver_mess in
  let <pkA, xna> = adec(mess, ltkB) in
  0

process:
!(
  new ltkA; out(pk(ltkA)); 
  new ltkB; out(pk(ltkB)); 
  (!Server_A(ltkA, pk(ltkB)) | !Device_B(pk(ltkA), ltkB))
)   
end
