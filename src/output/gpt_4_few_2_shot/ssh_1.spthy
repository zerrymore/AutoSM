theory SSH_Protocol
begin

functions: hash/1, aenc/2, adec/2, senc/2, sdec/2, sign/2, verify/2
equations: adec(aenc(m,pk(sk)),sk)=m, sdec(senc(m,k),k)=m, verify(sign(m,sk),pk(sk))=m

let Client(x, p, g, q, V_C, V_S, I_C, I_S, K_S) =
  let e = g^x mod p in
  out(e);
  in(K_S, f, s);
  if verify(s, K_S) = hash(V_C || V_S || I_C || I_S || K_S || e || f || (f^x mod p)) then
    event SessionBuiltC(K_S, e, f, s)
  else
    0

let Server(y, p, g, q, V_C, V_S, I_C, I_S, K_S) =
  let f = g^y mod p in
  in(e);
  let K = e^y mod p in
  let H = hash(V_C || V_S || I_C || I_S || K_S || e || f || K) in
  let s = sign(H, K_S) in
  out(K_S, f, s);
  event SessionBuiltS(K_S, e, f, s)

process:
!(
  new x; new y; new p; new g; new q; new V_C; new V_S; new I_C; new I_S; new K_S;
  (!Client(x, p, g, q, V_C, V_S, I_C, I_S, K_S) | !Server(y, p, g, q, V_C, V_S, I_C, I_S, K_S))
)
end
