theory SigFox_protocol
begin

functions: pk/1, ltk/1, aenc/2, adec/2, sign/2, verify/2
equations: adec(aenc(m,pk(sk)),sk)=m
           verify(sign(m,ltk(sk)),pk(sk))=m

let Server(ltkA, pkB)=      
  new na;
  let mess = aenc(<pk(ltkA), na>,pkB) in
  let sig = sign(mess, ltkA) in
  event OUT_S(<mess, sig>);
  out(<mess, sig>); 
  
let Device(ltkB, pkA) =  
  in(<cypher, sig>);
  let mess = verify(sig, pkA) in
  let <xpkA, xna> = adec(mess, ltkB) in
  event IN_D(<xpkA, xna>, <cypher, sig>);
  event SessionBuiltD(pk(ltkB), xna)

process:
!(
  new ltkA; out(pk(ltkA)); event HonestServer(pk(ltkA));
  new ltkB; out(pk(ltkB)); event HonestDevice(pk(ltkB));
  (!Server(ltkA, pk(ltkB)) | !Device(ltkB, pk(ltkA)))
)   
end