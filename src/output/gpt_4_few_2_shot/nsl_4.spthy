theory Needham_Schroeder_Public_Key_protocol
begin

functions: pk/1, aenc/2, adec/2
equations: adec(aenc(m,pk(sk)),sk)=m

let Alice(skA, pkB)=      
  new Na;
  out(aenc( <Na,pk(skA)> ,pkB));  
  in(cypher);
  let mess = adec(cypher,skA) in
  let <=Na,xNb> = mess in
  out(aenc(xNb, pkB));
  
let Bob(skB, pkA) =  
  in(cypher1);
  let mess1 = adec(cypher1,skB) in
  let <xNa, =pkA> = mess1 in
  new Nb;
  out(aenc(<xNa,Nb>,pkA));
  in(cypher2);
  let mess2 = adec(cypher2,skB) in
  let =Nb = mess2 in

process:
!(
  new skA; out(pk(skA)); 
  new skB; out(pk(skB)); 
  (!Alice(skA, pk(skB)) | !Bob(skB, pk(skA)))
)   
end